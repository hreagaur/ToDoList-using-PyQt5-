# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sqlite3
from PyQt5.QtWidgets import QMessageBox

from PyQt5 import QtCore, QtGui, QtWidgets

conn = sqlite3.connect("todo.db")
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS todo_list (
       list_item text)
''')
conn.commit()
conn.close()
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.add_pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda:self.add_it())
        self.add_pushButton.setGeometry(QtCore.QRect(140, 190, 141, 71))
        self.add_pushButton.setObjectName("add_pushButton")
        self.delete_pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda:self.delete_it())
        self.delete_pushButton.setGeometry(QtCore.QRect(530, 190, 131, 71))
        self.delete_pushButton.setObjectName("delete_pushButton")
        self.save_pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda:self.save_it())
        self.save_pushButton.setGeometry(QtCore.QRect(340, 190, 131, 71))
        self.save_pushButton.setObjectName("save_pushButton")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(140, 290, 521, 241))
        self.listWidget.setObjectName("listWidget")
        self.additeams_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.additeams_lineEdit.setGeometry(QtCore.QRect(140, 120, 521, 51))
        self.additeams_lineEdit.setObjectName("additeams_lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.grab()

    def grab(self):
        conn = sqlite3.connect("todo.db")
        cursor = conn.cursor()

        cursor.execute('''select * from todo_list''')
        records = cursor.fetchall()

        conn.commit()
        conn.close()

        for record in records:
            self.listWidget.addItem(str(record[0]))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ToDoList"))
        self.add_pushButton.setText(_translate("MainWindow", "ADD"))
        self.delete_pushButton.setText(_translate("MainWindow", "Delete"))
        self.save_pushButton.setText(_translate("MainWindow", "Save"))

    def add_it(self):
        iteam=self.additeams_lineEdit.text()
        self.listWidget.addItem(iteam)

    def delete_it(self):
        clicked=self.listWidget.currentRow()
        self.listWidget.takeItem(clicked)

    def save_it(self):
        conn = sqlite3.connect("todo.db")
        cursor = conn.cursor()
        cursor.execute("delete from todo_list;", )
        items=[]
        for index in range(self.listWidget.count()):
            items.append(self.listWidget.item(index))
        for item in items:
            cursor.execute("insert into todo_list values (:item)",
                           {
                               "item": item.text()
                           }

                           )
        conn.commit()
        conn.close()
        msq = QMessageBox()
        msq.setWindowTitle("saved")
        msq.setText("your todo saved been saved")
        x = msq.exec()
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
